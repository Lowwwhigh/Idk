local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/liebertsx/Tora-Library/main/src/librarynew",true))()

local tab = library:CreateWindow("My Things")
local folder = tab:AddFolder("Glass Bridge")

-- Variables for the toggle functionality
local breakImmunityEnabled = false
local glassESPConnections = {
    breakImmunity = nil,
    characterAdded = nil
}
local breakImmunityCollisions = {}
local LocalPlayer = game:GetService("Players").LocalPlayer

folder:AddToggle({
    text = "Glass Bridge Godmode",
    flag = "glass_godmode",
    callback = function(v)
        breakImmunityEnabled = v
        
        if v then
            local character = LocalPlayer.Character
            if not character then return end
            
            -- Find and destroy the PlayingGlassBridge object if it exists
            local playingGlassBridge = character:WaitForChild("PlayingGlassBridge")
            if playingGlassBridge then
                playingGlassBridge:Destroy()
            end
            
            -- Create an invisible collision part for breakable tiles (separate from tile models)
            local function setupBreakImmunity()
                local glassHolder = workspace:WaitForChild("GlassBridge") and workspace.GlassBridge:WaitForChild("GlassHolder")
                if not glassHolder then return end
                
                -- Clear existing collisions
                for _, collision in pairs(breakImmunityCollisions) do
                    if collision then
                        collision:Destroy()
                    end
                end
                table.clear(breakImmunityCollisions)
                
                -- Create collision folder if it doesn't exist
                local collisionFolder = workspace:FindFirstChild("BreakImmunityCollisions")
                if not collisionFolder then
                    collisionFolder = Instance.new("Folder")
                    collisionFolder.Name = "BreakImmunityCollisions"
                    collisionFolder.Parent = workspace
                end
                
                for _, tilePair in pairs(glassHolder:GetChildren()) do
                    for _, tileModel in pairs(tilePair:GetChildren()) do
                        if tileModel:IsA("Model") and tileModel.PrimaryPart then
                            local isBreakable = tileModel.PrimaryPart:GetAttribute("exploitingisevil") == true
                            
                            if isBreakable then
                                -- Create a new invisible collision part (separate from tile model)
                                local collisionPart = Instance.new("Part")
                                collisionPart.Name = "BreakImmunityCollision_" .. tileModel.Name
                                collisionPart.Size = tileModel.PrimaryPart.Size
                                collisionPart.Transparency = 1
                                collisionPart.CanCollide = true
                                collisionPart.Anchored = true
                                collisionPart.CFrame = tileModel.PrimaryPart.CFrame
                                collisionPart.Parent = collisionFolder
                                
                                -- Store reference for cleanup
                                table.insert(breakImmunityCollisions, collisionPart)
                            end
                        end
                    end
                end
            end
            
            -- Run immediately and set up connections for new tiles
            setupBreakImmunity()
            
            -- Monitor for new glass tiles being added
            glassESPConnections.breakImmunity = workspace.DescendantAdded:Connect(function(descendant)
                if descendant.Name == "GlassBridge" or (descendant.Parent and descendant.Parent.Name == "GlassHolder") then
                    task.wait(0.1) -- Small delay to ensure tile is fully loaded
                    if breakImmunityEnabled then
                        setupBreakImmunity()
                    end
                end
            end)
            
            -- Also monitor for character changes
            glassESPConnections.characterAdded = LocalPlayer.CharacterAdded:Connect(function(newCharacter)
                task.wait(0.5) -- Wait for character to fully load
                
                if breakImmunityEnabled then
                    -- Re-destroy PlayingGlassBridge if it reappears
                    local newPlayingGlassBridge = newCharacter:FindFirstChild("PlayingGlassBridge")
                    if newPlayingGlassBridge then
                        newPlayingGlassBridge:Destroy()
                    end
                end
            end)
        else
            -- Clean up when toggle is turned off
            if glassESPConnections.breakImmunity then
                glassESPConnections.breakImmunity:Disconnect()
                glassESPConnections.breakImmunity = nil
            end
            
            if glassESPConnections.characterAdded then
                glassESPConnections.characterAdded:Disconnect()
                glassESPConnections.characterAdded = nil
            end
            
            -- Remove all collision parts
            for _, collision in pairs(breakImmunityCollisions) do
                if collision and collision.Parent then
                    collision:Destroy()
                end
            end
            table.clear(breakImmunityCollisions)
            
            -- Remove the collision folder if empty
            local collisionFolder = workspace:FindFirstChild("BreakImmunityCollisions")
            if collisionFolder and #collisionFolder:GetChildren() == 0 then
                collisionFolder:Destroy()
            end
        end
    end
})

library:Init()
